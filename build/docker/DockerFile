# Build stage
FROM golang:1.21-alpine AS builder

# Install git for version info
RUN apk add --no-cache git bash

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build \
    -ldflags "-X main.version=$(git describe --tags --always --dirty 2>/dev/null || echo 'docker') \
              -X main.commit=$(git rev-parse --short HEAD 2>/dev/null || echo 'unknown') \
              -X main.buildTime=$(date -u '+%Y-%m-%d_%H:%M:%S')" \
    -o bin/datablip ./cmd/datablip

# Set executable permissions
RUN chmod +x bin/datablip

# Runtime stage
FROM alpine:latest

# Install ca-certificates for HTTPS downloads
RUN apk --no-cache add ca-certificates

# Create non-root user
RUN addgroup -S datablip && adduser -S datablip -G datablip

# Set working directory
WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/bin/datablip /usr/local/bin/datablip

# Create downloads directory with proper permissions
RUN mkdir -p /downloads && chown datablip:datablip /downloads

# Switch to non-root user
USER datablip

# Set default download directory
WORKDIR /downloads

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD /usr/local/bin/datablip --help > /dev/null || exit 1

# Default command
ENTRYPOINT ["/usr/local/bin/datablip"]
CMD ["--help"]